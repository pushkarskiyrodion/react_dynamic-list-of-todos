{"version":3,"sources":["enums/Filter.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/ModalCard/ModalCard.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","helpers/debounce.ts","index.tsx"],"names":["Filter","TodoInfo","todo","onClick","selectedTodo","id","title","completed","userId","textClassName","className","cn","type","TodoList","todos","appliedQuery","onSelectUser","onSelectTodo","handleClick","filteredTodos","filter","toLowerCase","includes","map","TodoFilter","filterValue","query","onSetQuery","onSelectFilter","onApplyQuery","value","onChange","e","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","ModalCard","user","email","name","toDo","href","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","TodoModal","useState","setUser","useEffect","fetchData","a","response","App","setTodos","setUserId","setFilterValue","setTodo","setQuery","setAppliedQuery","applyQuery","useCallback","f","timerId","clearTimeout","args","debounce","todoList","todoItem","result","handleSelectUser","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.233158aa.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  selectedTodo: Todo | null,\n  onClick: (id: number, todo: Todo) => void\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  onClick,\n  selectedTodo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const textClassName = completed\n    ? 'has-text-success'\n    : 'has-text-danger';\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': selectedTodo?.id === id,\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={textClassName}>{title}</p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onClick(userId, todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye': selectedTodo?.id !== id,\n                'fa-eye-slash': selectedTodo?.id === id,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  appliedQuery: string,\n  onSelectUser: (id: number) => void,\n  onSelectTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  appliedQuery,\n  onSelectUser,\n  onSelectTodo,\n}) => {\n  const handleClick = (userId: number, todo: Todo) => {\n    onSelectUser(userId);\n    onSelectTodo(todo);\n  };\n\n  const filteredTodos = todos.filter(todo => (\n    todo.title.toLowerCase().includes(appliedQuery.toLowerCase())\n  ));\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <TodoInfo\n            todo={todo}\n            selectedTodo={selectedTodo}\n            onClick={handleClick}\n            key={todo.id}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../enums/Filter';\n\ntype Props = {\n  filterValue: string,\n  query: string,\n  onSetQuery: (value: string) => void,\n  onSelectFilter: (value: Filter) => void,\n  onApplyQuery: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterValue,\n  query,\n  onSetQuery,\n  onSelectFilter,\n  onApplyQuery,\n}) => {\n  const handleSelectChange = (e: React.BaseSyntheticEvent) => {\n    onSelectFilter(e.target.value);\n  };\n\n  const handleInputChange = (e: React.BaseSyntheticEvent) => {\n    onSetQuery(e.target.value);\n    onApplyQuery(e.target.value);\n  };\n\n  const reset = () => {\n    onSetQuery('');\n    onApplyQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterValue}\n            onChange={handleSelectChange}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"null\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User,\n  todo: Todo,\n  onSelectUser: (id: number) => void,\n  onSelectTodo: (todo: null) => void,\n};\n\nexport const ModalCard: React.FC<Props> = ({\n  user,\n  todo,\n  onSelectUser,\n  onSelectTodo,\n}) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const reset = (userId: number, toDo: null) => {\n    onSelectUser(userId);\n    onSelectTodo(toDo);\n  };\n\n  return (\n    <div className=\"modal-card\">\n      <header className=\"modal-card-head\">\n        <div\n          className=\"modal-card-title has-text-weight-medium\"\n          data-cy=\"modal-header\"\n        >\n          {`Todo #${id}`}\n        </div>\n\n        <button\n          type=\"button\"\n          aria-label=\"null\"\n          className=\"delete\"\n          data-cy=\"modal-close\"\n          onClick={() => reset(0, null)}\n        />\n      </header>\n\n      <div className=\"modal-card-body\">\n        <p className=\"block\" data-cy=\"modal-title\">\n          {title}\n        </p>\n\n        <p className=\"block\" data-cy=\"modal-user\">\n\n          {completed ? (\n            <strong className=\"has-text-success\">Done</strong>\n          ) : (\n            <strong className=\"has-text-danger\">Planned</strong>\n          )}\n\n          {' by '}\n\n          <a href={`mailto:${email}`}>\n            {name}\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { ModalCard } from '../ModalCard';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\nimport { getUser } from '../../api';\n\ntype Props = {\n  userId: number,\n  todo: Todo | null,\n  onSelectUser: (id: number) => void,\n  onSelectTodo: (todo: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  todo,\n  onSelectUser,\n  onSelectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (userId === 0) {\n      return;\n    }\n\n    const fetchData = async () => {\n      await getUser(userId)\n        .then(response => setUser(response));\n    };\n\n    fetchData();\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user && todo ? (\n        <ModalCard\n          user={user}\n          todo={todo}\n          onSelectUser={onSelectUser}\n          onSelectTodo={onSelectTodo}\n        />\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { Filter } from './enums/Filter';\n\nimport { getTodos } from './api';\nimport { debounce } from './helpers/debounce';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [userId, setUserId] = useState(0);\n  const [filterValue, setFilterValue] = useState(Filter.All);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const applyQuery = useCallback(debounce(setAppliedQuery, 500), []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getTodos()\n        .then(todoList => todoList\n          .filter(todoItem => {\n            switch (filterValue) {\n              case Filter.Active:\n                return !todoItem.completed;\n\n              case Filter.Completed:\n                return todoItem.completed;\n\n              default:\n                return todoItem;\n            }\n          }))\n        .then(result => setTodos(result));\n    };\n\n    fetchData();\n  }, [filterValue]);\n\n  const handleSelectUser = (id: number) => {\n    setUserId(id);\n  };\n\n  if (!todos.length) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSetQuery={setQuery}\n                onApplyQuery={applyQuery}\n                filterValue={filterValue}\n                onSelectFilter={setFilterValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                selectedTodo={todo}\n                appliedQuery={appliedQuery}\n                todos={todos}\n                onSelectUser={handleSelectUser}\n                onSelectTodo={setTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {userId > 0 && (\n        <TodoModal\n          userId={userId}\n          todo={todo}\n          onSelectUser={handleSelectUser}\n          onSelectTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","export const debounce = (f: (value: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  };\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}